//QUESTION

//Given the head of a singly linked list, return true if it is a palindrome.

//Example 1:


//Input: head = [1,2,2,1]
//Output: true
//Example 2:


//Input: head = [1,2]
//Output: false
 

//Constraints:

//The number of nodes in the list is in the range [1, 105].
//0 <= Node.val <= 9



//ANSWER

class Solution 
{
    public ListNode reverse(ListNode head){
     ListNode prev=null;
        while(head!=null){
            ListNode next=head.next;
            head.next=prev;
            prev=head;
            head=next;
        }
        return prev;
    }
    public boolean isPalindrome(ListNode head)
    {
        ListNode f=head;
        ListNode s=head;
        while(f!=null && f.next!=null){
            f=f.next.next;
            s=s.next;
        }
        s=reverse(s);
        f=head;
        while(s!=null){
            if(f.val!=s.val){
                return false;
            }
            f=f.next;
            s=s.next;
        }
        
        return true;
    }
}
